% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RBFNN.R
\name{RBFNN_predict}
\alias{RBFNN_predict}
\title{Predict using a Radial Basis Function Neural Network.}
\usage{
RBFNN_predict(model, X, centroids, stds, inputType = "original_dataset")
}
\arguments{
\item{model}{The trained RBFNN.}

\item{X}{original dataset, distance matrix or gaussian kernel matrix.}

\item{centroids}{centroids of the model.}

\item{stds}{standard deviations of each RBF.}

\item{inputType}{type of \code{X}. Available types: original_dataset (original dataset), distance_matrix (Euclidean distance matrix ) and kernel_matrix (Gaussian kernel matrix).}
}
\value{
The predicted labels (in classification) or the value (in regression).
}
\description{
Predict using a Radial Basis Function Neural Network.
}
\examples{
data(iris)
iris <- iris
## Random permutation because the labels are ordered and therefore the accuracy would not
## be correct (only for this dataset).
iris <- iris[sample(nrow(iris)), ]

dataset <- iris[, 1:4]
labels <- iris[, 5]

X_train <- dataset[1:100, ]
y_train <- labels[1:100]
X_test <- dataset[101:150, ]
y_test <- labels[101:150]

neurons <- 10
seed_val <- 1
RBFNN <- RBFNN_train(as.matrix(X_train), as.matrix(y_train), neurons, seed_val)

model <- RBFNN$model
centroids <- RBFNN$centroids
stds <- RBFNN$stds

predictions <- RBFNN_predict(model, X_test, centroids, stds)
table(predictions, y_test)
accuracy <- sum(diag(table(predictions, y_test)))/nrow(X_test)
}
